<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pms.mapper.PmsUserStuMapper" >
  <resultMap id="BaseResultMap" type="com.pms.pojo.PmsUserStu" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="exp_id" property="expId" jdbcType="BIGINT" />
    <result column="tutor_id" property="tutorId" jdbcType="BIGINT" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="findStuPlanListByExpIdResultMap" type="com.pms.pojo.StuPlan">
    <id column="id" property="id"  jdbcType="BIGINT"/>
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <collection property="plans" ofType="com.pms.pojo.PmsPlan">
      <id property="id" column="planId" jdbcType="BIGINT"/>
      <result column="title" property="title" jdbcType="VARCHAR" />
      <result column="created" property="created" jdbcType="TIMESTAMP" />
      <result column="expired" property="expired" jdbcType="TIMESTAMP" />
      <result column="status" property="status" jdbcType="TINYINT" />
      <result column="plan_desc" property="planDesc" jdbcType="LONGVARCHAR" />
      <result column="status1" property="status1" jdbcType="TINYINT" />
      <result column="status2" property="status2" jdbcType="TINYINT" />
    </collection>
  </resultMap>
  <resultMap id="stuInfoResultMap" type="com.pms.pojo.StuInfo">
    <id column="id" property="id"  jdbcType="BIGINT"/>
    <result column="stu_name" property="stuName" jdbcType="VARCHAR" />
    <result column="tea_name" property="teaName" jdbcType="VARCHAR" />
    <result column="exp_name" property="expName" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, username, password, nickname, exp_id, tutor_id, created, updated
  </sql>
  <select id="findStuInfoById" parameterType="java.lang.Long" resultMap="stuInfoResultMap">
    SELECT DISTINCT
pms_user_stu.id,
pms_user_stu.nickname as stu_name,
pms_user_stu.created,
pms_exp.exp_name,
pms_user_tea.nickname as tea_name
FROM
pms_user_stu
LEFT JOIN pms_user_tea ON pms_user_stu.tutor_id=pms_user_tea.id
LEFT JOIN pms_exp ON pms_user_stu.exp_id=pms_exp.id
WHERE pms_user_stu.id=#{id,jdbcType=BIGINT}


  </select>
  <select id="findStuPlanListByExpId" parameterType="java.lang.Long" resultMap="findStuPlanListByExpIdResultMap">
SELECT DISTINCT
pms_user_stu.nickname,
pms_user_stu.id,
pms_plan.id AS planId,
pms_plan.title,
pms_plan.plan_desc,
pms_plan.created,
pms_plan.expired,
pms_plan.`status`,
pms_plan.status1,
pms_plan.status2
FROM
pms_user_stu
LEFT JOIN pms_plan ON pms_user_stu.id = pms_plan.stu_id AND pms_plan.expired >= CURDATE()
WHERE
pms_user_stu.exp_id = #{expId,jdbcType=BIGINT}


  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pms.pojo.PmsUserStuExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pms_user_stu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from pms_user_stu
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from pms_user_stu
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.pms.pojo.PmsUserStuExample" >
    delete from pms_user_stu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pms.pojo.PmsUserStu" >
    insert into pms_user_stu (id, username, password, 
      nickname, exp_id, tutor_id, 
      created, updated)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{expId,jdbcType=BIGINT}, #{tutorId,jdbcType=BIGINT}, 
      #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertReturnId" parameterType="com.pms.pojo.PmsUserStu">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pms_user_stu (id, username, password,
    nickname, exp_id, tutor_id,
    created, updated)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
    #{nickname,jdbcType=VARCHAR}, #{expId,jdbcType=BIGINT}, #{tutorId,jdbcType=BIGINT},
    #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pms.pojo.PmsUserStu" >
    insert into pms_user_stu
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="expId != null" >
        exp_id,
      </if>
      <if test="tutorId != null" >
        tutor_id,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="updated != null" >
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="expId != null" >
        #{expId,jdbcType=BIGINT},
      </if>
      <if test="tutorId != null" >
        #{tutorId,jdbcType=BIGINT},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pms.pojo.PmsUserStuExample" resultType="java.lang.Integer" >
    select count(*) from pms_user_stu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pms_user_stu
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null" >
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.expId != null" >
        exp_id = #{record.expId,jdbcType=BIGINT},
      </if>
      <if test="record.tutorId != null" >
        tutor_id = #{record.tutorId,jdbcType=BIGINT},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null" >
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pms_user_stu
    set id = #{record.id,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      exp_id = #{record.expId,jdbcType=BIGINT},
      tutor_id = #{record.tutorId,jdbcType=BIGINT},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pms.pojo.PmsUserStu" >
    update pms_user_stu
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="expId != null" >
        exp_id = #{expId,jdbcType=BIGINT},
      </if>
      <if test="tutorId != null" >
        tutor_id = #{tutorId,jdbcType=BIGINT},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pms.pojo.PmsUserStu" >
    update pms_user_stu
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      exp_id = #{expId,jdbcType=BIGINT},
      tutor_id = #{tutorId,jdbcType=BIGINT},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>